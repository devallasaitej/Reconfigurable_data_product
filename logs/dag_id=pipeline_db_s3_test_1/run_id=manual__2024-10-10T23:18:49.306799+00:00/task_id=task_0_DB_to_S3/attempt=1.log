[2024-10-10T23:18:52.487+0000] {taskinstance.py:1090} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: pipeline_db_s3_test_1.task_0_DB_to_S3 manual__2024-10-10T23:18:49.306799+00:00 [queued]>
[2024-10-10T23:18:52.492+0000] {taskinstance.py:1090} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: pipeline_db_s3_test_1.task_0_DB_to_S3 manual__2024-10-10T23:18:49.306799+00:00 [queued]>
[2024-10-10T23:18:52.492+0000] {taskinstance.py:1288} INFO - 
--------------------------------------------------------------------------------
[2024-10-10T23:18:52.492+0000] {taskinstance.py:1289} INFO - Starting attempt 1 of 1
[2024-10-10T23:18:52.492+0000] {taskinstance.py:1290} INFO - 
--------------------------------------------------------------------------------
[2024-10-10T23:18:52.496+0000] {taskinstance.py:1309} INFO - Executing <Task(PythonOperator): task_0_DB_to_S3> on 2024-10-10 23:18:49.306799+00:00
[2024-10-10T23:18:52.504+0000] {standard_task_runner.py:55} INFO - Started process 42069 to run task
[2024-10-10T23:18:52.508+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'pipeline_db_s3_test_1', 'task_0_DB_to_S3', 'manual__2024-10-10T23:18:49.306799+00:00', '--job-id', '26', '--raw', '--subdir', 'DAGS_FOLDER/pipeline_db_s3_test_1.py', '--cfg-path', '/tmp/tmpqrr37msb']
[2024-10-10T23:18:52.514+0000] {standard_task_runner.py:83} INFO - Job 26: Subtask task_0_DB_to_S3
[2024-10-10T23:18:52.530+0000] {logging_mixin.py:137} WARNING - /usr/local/lib/python3.9/site-packages/***/settings.py:250 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2024-10-10T23:18:52.570+0000] {task_command.py:389} INFO - Running <TaskInstance: pipeline_db_s3_test_1.task_0_DB_to_S3 manual__2024-10-10T23:18:49.306799+00:00 [running]> on host d6685a94b59c
[2024-10-10T23:18:52.603+0000] {taskinstance.py:1516} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=pipeline_db_s3_test_1
AIRFLOW_CTX_TASK_ID=task_0_DB_to_S3
AIRFLOW_CTX_EXECUTION_DATE=2024-10-10T23:18:49.306799+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2024-10-10T23:18:49.306799+00:00
[2024-10-10T23:18:52.605+0000] {db_s3.py:21} INFO - Creating Spark session ......
[2024-10-10T23:19:02.695+0000] {logging_mixin.py:137} INFO - Executable Query: ( select * from ***.reddit_d where flair = 'Blog' ) as query
[2024-10-10T23:19:03.230+0000] {db_s3.py:102} ERROR - Error during reading from table: An error occurred while calling o46.load.
: org.postgresql.util.PSQLException: ERROR: relation "***.reddit_d" does not exist
  Position: 31
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:68)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:840)

[2024-10-10T23:19:03.231+0000] {taskinstance.py:1776} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/opt/airflow/scripts/db_s3.py", line 92, in table_data_read
    read_df = (spark.read
  File "/usr/local/lib/python3.9/site-packages/pyspark/sql/readwriter.py", line 307, in load
    return self._df(self._jreader.load())
  File "/usr/local/lib/python3.9/site-packages/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
  File "/usr/local/lib/python3.9/site-packages/pyspark/errors/exceptions/captured.py", line 169, in deco
    return f(*a, **kw)
  File "/usr/local/lib/python3.9/site-packages/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o46.load.
: org.postgresql.util.PSQLException: ERROR: relation "airflow.reddit_d" does not exist
  Position: 31
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:68)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:840)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/airflow/operators/python.py", line 175, in execute
    return_value = self.execute_callable()
  File "/usr/local/lib/python3.9/site-packages/airflow/operators/python.py", line 192, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/scripts/db_s3.py", line 296, in main_db_s3
    inputs = table_data_read(s3_conn, db_conn, source_db, source_table, DML, dag_id, run_id, task_order,db_access,s3_access,target_s3)
  File "/opt/airflow/scripts/db_s3.py", line 105, in table_data_read
    run_logger(dag_id, run_id, 'DB-S3', task_order ,'insert',db_access, source_table,DML,'read',0,s3_access,target_s3,'failed')
TypeError: run_logger() missing 1 required positional argument: 'status'
[2024-10-10T23:19:03.265+0000] {taskinstance.py:1327} INFO - Marking task as FAILED. dag_id=pipeline_db_s3_test_1, task_id=task_0_DB_to_S3, execution_date=20241010T231849, start_date=20241010T231852, end_date=20241010T231903
[2024-10-10T23:19:03.300+0000] {standard_task_runner.py:100} ERROR - Failed to execute job 26 for task task_0_DB_to_S3 (run_logger() missing 1 required positional argument: 'status'; 42069)
[2024-10-10T23:19:03.316+0000] {local_task_job.py:212} INFO - Task exited with return code 1
[2024-10-10T23:19:03.366+0000] {taskinstance.py:2596} INFO - 0 downstream tasks scheduled from follow-on schedule check
